name: "Zeiler_conv5"

input: "data"
input_dim: 1
input_dim: 3
input_dim: 224
input_dim: 224

input: "labels"
input_dim: 1 		# to be changed on-the-fly to match input dim
input_dim: 9        # 9(anchors)        
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim

input: "labels_weights"
input_dim: 1 		# to be changed on-the-fly to match input dim
input_dim: 9        # 9(anchors)        
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim

input: "bbox_targets"
input_dim: 1  		# to be changed on-the-fly to match input dim
input_dim: 36  		# 4 * 9(anchors) 
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim

input: "bbox_loss_weights"
input_dim: 1  		# to be changed on-the-fly to match input dim
input_dim: 36  		# 4 * 9(anchors) 
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim
input_dim: 15  		# size for 224 input image, to be changed on-the-fly to match input dim


layer {
	name: "conv1"
	type: "Convolution"
	bottom: "data"
	top: "conv1"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}

layer {
	name: "norm1"
	type: "LRN"
	bottom: "conv1"
	top: "norm1"
	lrn_param {
		local_size: 3
		alpha: 0.00005
		beta: 0.75
		norm_region: WITHIN_CHANNEL
	}
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "norm1"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}

layer {
	name: "conv2"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}

layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}

layer {
	name: "norm2"
	type: "LRN"
	bottom: "conv2"
	top: "norm2"
	lrn_param {
		local_size: 3
		alpha: 0.00005
		beta: 0.75
		norm_region: WITHIN_CHANNEL
	}
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "norm2"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}

layer {
	name: "conv3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu3"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}

layer {
